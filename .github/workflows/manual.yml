# This is a basic workflow that is manually triggered
name: POE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # List contents of the directory
      - name: List contents
        run: ls

      # Compiles classes to test 
      - name: Compile classes
        working-directory: ./src
        run: javac -cp "../testresources/junit-platform-console-standalone-1.6.0.jar" ./main/Main.java ./main/Login.java ./main/Task.java "../test/main/LoginTest.java" "../test/main/TaskTest.java"  

      # List contents of src to verify that classes compiled 
      - name: List contents of src directory after compile
        working-directory: ./src/main
        run: ls

        # Create testresources directory if it doesnt exit
      - name: Create testresources directory
        run: mkdir -p testresources/main
        
      # Copy compiled classes to test directory 
      - name : Copy compiled classes to testresources directory 
        working-directory: ./src/main
        run: cp Main.class Login.class Task.class ../..testresources/main
        
      # Copy compiled test classes to testresources directory 
      - name : Copy compiled Test classes to testresources directory 
        working-directory: ./test/main
        run: cp LoginTest.class TaskTest.class ../..testresources/main

        # List contents of testresources directory
        - name: List contents of testresources directory
        run: 1s testresources/main

        #Run main class tests
        - name: Run main class tests and create report
        working-directory: ./test
        run: cp cp Main.class Login.class Task.class ../..testresources/main

        # Copy compiled test classes to testresources directory 
      - name : Copy compiled Test classes to testresources directory 
        working-directory: ./test/main
        run: cp LoginTest.class TaskTest.class ../..testresources/main

        # List contents of testresources directory
        - name: List contents of testresources directory
        run: 1s testresources/main
        
      # Run main class tests and create report
      - name: Run main class tests and create report
      working-directory: ./test
      run: 
      1s
      java -cp "../testresources/junit-platform-console-standalone-1.6.0.jar:../testresources" org.junit.platform.console.ConsoleLauncher --select-class main.LoginTest
        
      # Run tests and output report 
      - name: Run Tests and create report 
        working-directory: ./test
        run: |
         ls
         java -cp  "../testresources/junit-platform-console-standalone-1.6.0.jar:../testresources" org.junit.platform.console.ConsoleLauncher --select-class main.TaskTest
